local TextService = game:GetService("TextService")
local UserInputService = game:GetService("UserInputService")
local UIlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/55zay16/Dexion/refs/heads/main/UIlib.lua"))()

local Values = {
    ["tpaura"] = false,
    ["anti die"] = false,


    ["flight"] = false,
    ["infinitejump"] = false,

    ["esp"] = false,
    ["nametags"] = false,
    ["tracers"] = false,

    ["anti void"] = false,
    ["no gravity"] = false,
    ["uninject"] = false
}

local BridgeDuel = UIlib:Init("Bridge Duel")

local CombatTab = UIlib:AddTab(BridgeDuel,"Combat",0.092,0,0.106,0)
local MovementTab = UIlib:AddTab(BridgeDuel,"Movement",0.259,0,0.106,0)
local VisualsTab = UIlib:AddTab(BridgeDuel,"Visuals",0.426,0,0.106,0)
local UtilitysTab = UIlib:AddTab(BridgeDuel,"Utility",0.593,0,0.106,0)

UIlib:AddButton(CombatTab,"Tp Aura",function()
    Values["tpaura"] = not Values["tpaura"]
end)

UIlib:AddButton(CombatTab,"Anti Die",function()
    Values["anti die"] = not Values["anti die"]
end)

UIlib:AddButton(MovementTab,"Flight",function()
    Values["flight"] = not Values["flight"]
end)

UIlib:AddButton(MovementTab,"Infinite Jump",function()
    Values["infinitejump"] = not Values["infinitejump"]
end)

UIlib:AddButton(VisualsTab,"Esp",function()
    Values["esp"] = not Values["esp"]
end)

UIlib:AddButton(VisualsTab,"Nametags",function()    
    Values["nametags"] = not Values["nametags"]
end)

UIlib:AddButton(VisualsTab,"Tracers",function()
    Values["tracers"] = not Values["tracers"]
end)

UIlib:AddButton(UtilitysTab,"Anti Void",function()
    Values["anti void"] = not Values["anti void"]

    pcall(function()
        if Values["anti void"] == true then  
            if not game.Workspace:FindFirstChild("AntiVoid") then 
                local AntiVoidPart = Instance.new("Part")

                AntiVoidPart.Parent = game.Workspace
                AntiVoidPart.Name = "AntiVoid"
                AntiVoidPart.Transparency = 0.5
                AntiVoidPart.CanCollide = true
                AntiVoidPart.Size = Vector3.new(1000, 1, 1000)
                AntiVoidPart.Anchored = true
                AntiVoidPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-30,0) 

                AntiVoidPart.Touched:Connect(function(hit)
                    if hit.Parent.Name == game.Players.LocalPlayer.Name then
                        hit.Parent.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,20,0)
                    end
                end)
            end
        else
            if game.Workspace:FindFirstChild("AntiVoid") then
                game.Workspace.AntiVoid:Destroy()
            end
        end
    end)
end)

UIlib:AddButton(UtilitysTab,"No Gravity",function()
    Values["no gravity"] = not Values["no gravity"]
end)

UIlib:AddButton(UtilitysTab,"Uninject",function()
    Values["uninject"] = not Values["uninject"]
end)


local MaxDistance = 15
local TempDisableAura = false
local lastTick = tick()

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Space and Values["infinitejump"] == true then
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

local Running = true

while Running do 
    task.wait()

    local Distance = math.huge
    local Target = nil

    pcall(function()
        for _, i in pairs(game.Players:GetPlayers()) do
            if i.Name ~= game.Players.LocalPlayer.Name then
                local DistanceToPlayer = (i.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                
                if DistanceToPlayer < Distance and DistanceToPlayer <= MaxDistance then
                    -- make sure they are on differnt teams
                    if i.Team ~= game.Players.LocalPlayer.Team then
                        Distance = DistanceToPlayer
                        Target = i
                    else
                        if #game.Teams:GetChildren() <= 1 then
                            Distance = DistanceToPlayer
                            Target = i
                        end
                    end
                end
            end
        end
    end)

    pcall(function()
        if Values["uninject"] == true then 
            for _,i in pairs(Values) do
                i = false
            end
            BridgeDuel:Destroy()
            Running = false
        end

        pcall(function()
            if Values["tpaura"] == true and TempDisableAura == false and Target.Character.Humanoid.Health > 0 then
                task.wait(0.05)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame
                
                mouse1click()
            end

            if Values["anti die"] == true and Values["tpaura"] == true and game.Players.LocalPlayer.Character.Humanoid.Health <= 40 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame * CFrame.new(0,MaxDistance * 1.3,0)
                game.Workspace.Gravity = 0
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)

                TempDisableAura = true
            else
                if Values["anti die"] == true and Values["tpaura"] == true and game.Players.LocalPlayer.Character.Humanoid.Health > 60 then
                    TempDisableAura = false
                    if Values["flight"] == false then
                        game.Workspace.Gravity = 196.2
                    end
                elseif Values["tpaura"] == true then
                    game.Workspace.Gravity = 0
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame * CFrame.new(0,MaxDistance * 1.5,0)
                    game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end
        end)

        pcall(function()
            if Values["flight"] == true then
                game.Workspace.Gravity = 0
            else
                game.Workspace.Gravity = 196.2
            end

            if Values["no gravity"] == true then
                game.Workspace.Gravity = 0
            else
                if Values["flight"] == false then
                    game.Workspace.Gravity = 196.2
                end
            end
        end)

        pcall(function()
            if Values["esp"] then
                for _, i in pairs(game.Players:GetPlayers()) do
                    if i.Character:FindFirstChild("Highlight") then else
                        if i == game.Players.LocalPlayer then continue end

                        local highlight = Instance.new("Highlight")
                        highlight.Parent = i.Character
                        highlight.FillColor = Color3.fromRGB(255, 0, 0)
                        highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
                        highlight.FillTransparency = 0.5
                        highlight.Name = "Highlight"
                    end
                end
            else
                for _, i in pairs(game.Players:GetPlayers()) do
                    if i.Character:FindFirstChild("Highlight") then
                        i.Character.Highlight:Destroy()
                    end
                end
            end

            if Values["nametags"] then
                for _, i in pairs(game.Players:GetPlayers()) do
                    if i.Character:FindFirstChild("NameTag") then else
                        if i == game.Players.LocalPlayer then continue end

                        local nametag = Instance.new("BillboardGui")
                        nametag.Name = "NameTag"
                        nametag.Parent = i.Character
                        nametag.Adornee = i.Character.Head
                        nametag.Size = UDim2.new(0, 50, 0, 50)
                        nametag.StudsOffset = Vector3.new(0, 2, 0)
                        nametag.AlwaysOnTop = true
                        nametag.Enabled = true

                        local nametext = Instance.new("TextLabel")
                        nametext.Parent = nametag
                        nametext.Size = UDim2.new(1, 0, 1, 0)    
                        nametext.BackgroundTransparency = 1
                        nametext.Text = i.Name
                        nametext.TextColor3 = Color3.fromRGB(255, 255, 255)
                        nametext.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                        nametext.TextStrokeTransparency = 0
                        nametext.TextScaled = true
                        nametext.TextWrapped = true
                    end
                end
            else
                for _, i in pairs(game.Players:GetPlayers()) do
                    if i.Character:FindFirstChild("NameTag") then
                        i.Character.NameTag:Destroy()
                    end
                end
            end

            if Values["tracers"] then
                for _, i in pairs(game.Players:GetPlayers()) do
                    if i.Character:FindFirstChild("Tracer") then else
                        if i == game.Players.LocalPlayer then continue end

                        local Tracer = Instance.new("Beam")
                        Tracer.Color = ColorSequence.new(Color3.fromRGB(255, 0, 0))
                        Tracer.Parent = i.Character
                        Tracer.Name = "Tracer"
                        Tracer.Width0 = 0.5
                        Tracer.Width1 = 0.5
                        Tracer.Attachment0 = i.Character.HumanoidRootPart.RootAttachment
                        Tracer.Attachment1 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootAttachment
                    end
                end
            else
                for _, i in pairs(game.Players:GetPlayers()) do
                    if i.Character:FindFirstChild("Tracer") then
                        i.Character.Tracer:Destroy()
                    end
                end
            end
        end)
    end)
end


